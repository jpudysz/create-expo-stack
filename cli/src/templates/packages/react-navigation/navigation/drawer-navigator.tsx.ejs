import { Ionicons, MaterialIcons } from '@expo/vector-icons';
import { createDrawerNavigator } from '@react-navigation/drawer';
import { StackScreenProps } from '@react-navigation/stack';
import { HeaderButton } from 'components/HeaderButton';
<% if (props.stylingPackage?.name === "unistyles") { %>
import { useUnistyles } from 'react-native-unistyles';
<% } %>

import { RootStackParamList } from '.';
import TabNavigator from './tab-navigator';
import Home from '../screens/home';

type Props = StackScreenProps<RootStackParamList, 'DrawerNavigator'>;

const Drawer = createDrawerNavigator();

export default function DrawerNavigator({ navigation }: Props) {
<% if (props.stylingPackage?.name === "unistyles") { %>
  const { theme } = useUnistyles();
<% } %>

  return (
    <% if (props.stylingPackage?.name === "unistyles") { %>
    <Drawer.Navigator
        screenOptions={{
            headerStyle: {
                backgroundColor: theme.colors.background,
            },
            headerTitleStyle: {
                color: theme.colors.typography,
            },
            headerTintColor: theme.colors.typography,
            drawerStyle: {
                backgroundColor: theme.colors.background,
            },
            drawerLabelStyle: {
                color: theme.colors.typography,
            },
            drawerInactiveTintColor: theme.colors.typography,
        }}
    >
    <% } else { %>
    <Drawer.Navigator>
    <% } %>
      <Drawer.Screen
        name="Home"
        component={Home}
        options={{
          drawerIcon: ({ size, color }) => (
            <Ionicons name="home-outline" size={size} color={color} />
          ),
        }}
      />
      <Drawer.Screen
        name="Tabs"
        component={TabNavigator}
        options={{
          headerRight: () => <HeaderButton onPress={() => navigation.navigate('Modal')} />,
          drawerIcon: ({ size, color }) => (
            <MaterialIcons name="border-bottom" size={size} color={color} />
          ),
        }}
      />
    </Drawer.Navigator>
  );
}
